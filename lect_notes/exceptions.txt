1) Когда мы пишем оператор throw, компилятор транслирует его в пару вызовов функций libstdc++, которые, соответственно, 
размещают исключение и начинают процесс раскручивания стека соответствующим библиотечным вызововм.

2) Для каждого catch блока компилятор дописывает некую специальную информацию после тела метода, таблицу исключений, которые метод может отлавливать, 
а также таблицу очистки (подробнее о таблице очистки будет далее).

3) В процессе раскручивания стека вызывается специальная функция из libstdc++ (называемая "персональной подпрограммой" [personality routine]), 
которая проверяет каждую функцию в стеке на ошибки, которые она может отлавливать.

4) Если не нашлось никого, кто мог бы отловить эту ошибку, вызывается std::terminate.

5) Если кто-то все же нашелся, раскрутка запускается снова с вершины стека. 
- При этой повторной раскрутке запускается "персональная подпрограмма" по очистке ресурсов для каждого метода.
- Подпрограмма проверяет таблицу очистки для текущего метода.
- Если в методе есть, что очистить, 
подпрограмма "прыгает" в текущий фрейм стэка и запускает код очистки, который вызывает деструкторы для каждого из объектов, 
размещенных в текущей области видимости.
